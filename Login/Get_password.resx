<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="errorProvider3.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>120, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>